.tc-label {
  display: block;
  width: 100%;
  margin-bottom: 5px;
  padding-right: 5px;

  @include roboto-regular;

  font-size: 12px;
  color: $tc-gray-80;
  text-transform: uppercase;
}

.tc-label__wrapper {
  position: relative;
}

.tc-label__asterisk {
  position: absolute;
  top: -20px;
  right: 5px;

  @include roboto-regular;

  font-size: 10px;
  color: $tc-red;
  // Asterisk
  span {
    font-size: 16px;
  }
}

// File input stylings
.tc-file-field {
  display: block;
}

.tc-file-field__label {
  width: 500px;

  label {
    display: inline-block;
  }
}

.tc-file-field__inputs {
  display: flex;
  flex-direction: row;
  width: 500px;

  div {
    position: relative;
    display: inline-block;
    width: 100%;
    margin-right: 10px;
  }

  button {
    flex: 1 0 auto;
  }
}

// Textarea with label and optional character count
.tc-textarea__char-count {
  float: right;

  @include roboto-regular;

  font-size: 11px;
  color: $tc-gray-60;
}

.tc-textarea__char-count--current {
  @include roboto-regular;

  color: $tc-gray-80;
}

// Error messages
.tc-error-messages {
  margin-bottom: 20px;
  padding: 10px 7px;
  border: 1px solid $tc-red-70;
  background-color: $tc-red-30;
  color: $tc-red;

  @include roboto-regular;

  font-style: italic;
  font-size: 14px;
  line-height: 20px;
  text-align: left;
}

// Two column form blocks with descriptions/instructions
.form-blocks {
  width: 100%;
}

.form-block {
  padding-bottom: 30px;
  flex-direction: column;

  @media screen and (min-width: 1000px) {
    padding: 30px 0;
    border-top: 1px solid $tc-gray-20;
    flex-direction: row;
  }

  &:first-child {
    border-top: none;
  }
}

.form-block__instructions {
  margin-bottom: 20px;
  padding-bottom: 10px;
  border-bottom: 1px solid $tc-gray-neutral-light;

  @media screen and (min-width: 1000px) {
    margin-bottom: 0;
    padding-right: 33px;
    flex: 1 0 auto;
    max-width: 300px;
    border-bottom: none;
  }
}

.form-block__title {
  margin-bottom: 14px;

  @include roboto-regular;

  font-size: 16px;
  color: $tc-gray-80;
  text-transform: uppercase;
}

.form-block__text {
  @include roboto-regular;

  font-size: 13px;
  font-style: italic;
  line-height: 20px;
  color: $tc-gray-80;

  p {
    @media screen and (min-width: 1000px) {
      margin-bottom: 15px;
    }
  }
}

.form-block__fields {
  width: 100%;
  border-bottom: 6px solid $tc-gray-20;

  @media screen and (min-width: 1000px) {
    width: 73%;
    padding-left: 60px;
    border-bottom: none;
    border-left: 6px solid $tc-gray-20;
  }
}

// Fieldsets: More than one fieldset
// Fieldset: Multiple input groups
.fieldset {
  display: block;
  width: 500px;
  margin: 0 auto;
  padding-bottom: 20px;

  @media screen and (min-width: 1000px) {
    width: 100%;
    margin: 0;
    padding-bottom: 0;
  }
}

.fieldsets {
  width: 100%;
  padding-bottom: 20px;

  @media screen and (min-width: 1000px) {
    padding-bottom: 0;
  }

  .fieldset {
    border-bottom: 1px solid $tc-gray-20;
    margin-bottom: 20px;
    padding-bottom: 10px;
  }
}

.fieldset__input {
  width: 100%;
  max-width: 500px;
  display: block;
}

.fieldset__button {
  display: block;

  @media screen and (min-width: 1000px) {
    margin-left: 0;
  }
}

// Inputs before style guide
// Topcoder Inputs

input {
  @include placeholder {
    @include roboto-regular;

    color: $tc-gray-80;
    font-size: 12px;
    text-transform: uppercase;
    transition: opacity 0.15s;
    opacity: 1;
  }
}

input:focus {
  @include placeholder {
    opacity: 0;
    transition: opacity 0.15s;
  }
}

textarea {
  padding: 10px;
  line-height: 24px;

  @include placeholder {
    color: $tc-gray-80;
    font-weight: 300;
  }
}

input:not([type="checkbox"]) {
  height: 40px;
  width: 100%;
  font-size: 15px;

  @include roboto-regular;

  line-height: 20px;
  color: $tc-gray-80;
  padding-left: 10px;
  margin-bottom: 10px;
  outline: none;
  background: $tc-white;
  border: 1px solid $tc-gray-30;
  box-shadow: inset 0 0 2px 0 rgba(183, 183, 183, 0.2);
  border-radius: 2px;
  cursor: auto;
  transition: 0.15s all;
}

// Compound fields, reset the input element and style the parent container to resemble input
.topcoder-input,
.toggle-password,
.toggle-password-with-tips {
  // Reset the input styles
  input {
    height: 20px;
    border: none;
    background: none;
    box-shadow: none;
    padding: none;

    &:hover,
    &:focus,
    &.focus {
      border: none;
      box-shadow: none;
      outline: none;
    }
  }

  label {
    display: inline-block;
    text-transform: uppercase;

    @include roboto-medium;

    font-size: 10px;
    line-height: 10px;
    color: $tc-gray-80;
    height: 20px;
    width: 60px;
    padding: 0;

    input[type='checkbox'] {
      height: 14px;
      width: 14px;
    }
  }
}

input:not([type="checkbox"]):hover {
  border: 1px solid $tc-gray-80;
  box-shadow: inset 0 0 2px 0 $tc-gray-30;
}

input:not([type="checkbox"]):focus,
input:not([type="checkbox"]).focus {
  border: 1px solid $tc-dark-blue;
  outline: none;
  box-shadow: inset 0 0 2px 1px rgba(133, 203, 255, 0.4);
}

input:not([type="checkbox"]):disabled {
  border: 1px solid $tc-gray-20;
  background-color: $tc-gray-30;
  box-shadow: none;
}

//Empty state
textarea,
.topcoder-input,
.toggle-password > input[type='password'],
.toggle-password-with-tips > input[type='password'] {
  height: 40px;
  width: 100%;
  font-size: 15px;

  @include roboto-regular;

  line-height: 20px;
  color: $tc-gray-80;
  padding-left: 10px;
  margin-bottom: 10px;
  outline: none;
  background: $tc-white;
  border: 1px solid $tc-gray-30;
  box-shadow: inset 0 0 2px 0 rgba(183, 183, 183, 0.2);
  border-radius: 2px;
  cursor: auto;

  &:hover {
    border: 1px solid $tc-gray-80;
    box-shadow: inset 0 0 2px 0 $tc-gray-30;
  }

  &:focus,
  &.focus {
    border: 1px solid $tc-dark-blue;
    outline: none;
    box-shadow: inset 0 0 2px 1px rgba(133, 203, 255, 0.4);
  }

  &:disabled {
    border: 1px solid $tc-gray-20;
    background-color: $tc-gray-30;
    box-shadow: none;
  }

  transition: 0.15s all;
}

textarea:focus {
  @include placeholder {
    opacity: 0;
    transition: opacity 0.15s;
  }
}

.tc-textarea {
  display: block;
  max-width: 640px;

  textarea {
    width: 100%;
    min-height: 92px;
    display: block;
  }
}

// Custom Inputs
//
.input-sticky-placeholder-container {
  position: relative;

  span.placeholder-text {
    position: absolute;
    top: 14px;
    right: 10px;

    @include roboto-light;

    font-size: 10px;
    line-height: 10px;
    text-transform: uppercase;
    color: $tc-gray-80;
  }
}

// Styling fot react input tags

:global {
  .ReactTags__selected {
    display: flex;
    flex-wrap: wrap;
  }

  .ReactTags__tagInputField {
    box-shadow: none;
  }

  .ReactTags__tags {
    border: 1px solid #c0c0c0;
    border-radius: 2px;
    padding-top: 5px;
    width: 450px;
  }

  .ReactTags__tag {
    border: 1px solid #ddd;
    background: #eee;
    font-size: 18px;
    display: block;
    padding: 5px 10px;
    margin: 0 5px 5px 5px;
    cursor: move;
    border-radius: 2px;
    vertical-align: middle;
    line-height: 30px;
  }

  .ReactTags__tagInput {
    width: 100px;
  }

  div.ReactTags__tagInput input.ReactTags__tagInputField,
  div.ReactTags__tagInput input.ReactTags__tagInputField:hover,
  div.ReactTags__tagInput input.ReactTags__tagInputField:focus {
    border: none;
    box-shadow: none;
  }

  div.ReactTags__suggestions {
    position: absolute;
  }

  div.ReactTags__suggestions ul {
    list-style-type: none;
    box-shadow: 0.05em 0.01em 0.5em rgba(0, 0, 0, 0.2);
    background: white;
    width: 200px;
  }

  div.ReactTags__suggestions li {
    border-bottom: 1px solid #ddd;
    padding: 5px 10px;
    margin: 0;
  }

  div.ReactTags__suggestions li mark {
    text-decoration: underline;
    background: none;
    font-weight: 600;
  }

  div.ReactTags__suggestions ul li.ReactTags__activeSuggestion {
    background: #c0c0c0;
    cursor: pointer;
  }

  div.ReactTags__selected a.ReactTags__remove {
    color: #aaa;
    margin-left: 5px;
    cursor: pointer;
  }
}
